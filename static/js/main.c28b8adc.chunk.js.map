{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","isStarted","setStart","isReversed","reverse","None","sortBy","setSortBy","visibleGoods","Name","sort","good1","good2","localeCompare","Length","length","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAgBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,YAAAA,E,iBAAAA,M,KAML,IA6FeE,EA7FO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAASH,EAAOQ,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KAEIC,EAAY,UAAOV,GAEvB,OAAQQ,GACN,KAAKT,EAAOY,KACVD,EAAeA,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAC/BD,EAAME,cAAcD,MACtB,MAEF,KAAKf,EAAOiB,OACVN,EAAeA,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAC/BD,EAAMI,OAASH,EAAMG,UACvB,MAEF,QACEP,EAAY,UAAOV,GAOvB,OAJIK,GACFK,EAAaJ,UAIb,sBAAKY,UAAU,gDAAf,UACE,oBAAIA,UAAU,aAAd,oBACEf,GACA,wBACEgB,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMhB,GAAS,IAH1B,mBASF,sBAAKc,UAAU,yCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMd,GAASD,IAH1B,qBAQA,wBACEc,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMX,EAAUV,EAAOY,OAHlC,iCAQA,wBACEQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMX,EAAUV,EAAOiB,SAHlC,4BAQA,wBACEG,KAAK,SACLD,UAAU,sBACVE,QAAS,WACPd,GAAQ,GACRG,EAAUV,EAAOQ,OALrB,sBAYDJ,GACC,sBAAKe,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,yBAEA,6BACGR,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBAAeJ,UAAU,YAAzB,SACGI,GADMA,eCrGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.c28b8adc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  None = 'none',\n  Name = 'name',\n  Length = 'length',\n}\n\nconst App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, reverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.None);\n\n  let visibleGoods = [...goodsFromServer];\n\n  switch (sortBy) {\n    case SortBy.Name:\n      visibleGoods = visibleGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)));\n      break;\n\n    case SortBy.Length:\n      visibleGoods = visibleGoods.sort((good1, good2) => (\n        good1.length - good2.length));\n      break;\n\n    default:\n      visibleGoods = [...goodsFromServer];\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App container.is-widescreen has-text-centered\">\n      <h1 className=\"title is-1\">Goods</h1>\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success\"\n          onClick={() => setStart(true)}\n        >\n          Start\n        </button>\n      )}\n\n      <div className=\"is-flex is-justify-content-center mt-5\">\n        <button\n          type=\"button\"\n          className=\"button is-info mx-4\"\n          onClick={() => reverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-info mx-4\"\n          onClick={() => setSortBy(SortBy.Name)}\n        >\n          Sort Alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-info mx-4\"\n          onClick={() => setSortBy(SortBy.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-info mx-4\"\n          onClick={() => {\n            reverse(false);\n            setSortBy(SortBy.None);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      {isStarted && (\n        <div className=\"mt-6\">\n          <h2 className=\"title is-2\">Goods List:</h2>\n\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} className=\"is-size-4\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}